// x Filtre pizza
// Ajout pizza
// Suppression pizza
// Cuisson pizza
// Édition pizza
// Sauvegarde indexeddb

// var pizzaList = new PizzaList()

// pizzaList.addPizza(
//   new Pizza('Margherita')
//     .addTopping('tomato sauce')
//     .addTopping('mozzarella')
// )

// pizzaList.addPizza(
//   new Pizza('Funghi')
//     .addTopping('tomato sauce')
//     .addTopping('mozzarella')
//     .addTopping('mushrooms')
// )

// // pizzas.pizzas[0].cook(5000)
// //   .then(() => {
// //     console.log('Pizza cuite')
// //   })

// function drawList (query = null) {
//   pizzaList.with(query)
//     .then(pizzas => {
//       console.log(pizzas)
//       document.getElementById('pizzas').innerHTML = pizzas
//         .map(pizza => `<li><strong>${pizza.name}</strong> ${pizza.toppings2string()}</li>`)
//         .join('')
//     })
// }

// drawList()

// document.getElementById('query')
//   .addEventListener('change', (evt) => {
//     drawList(evt.target.value)
//   }, false)

// set draggable="true" on source element
document.getElementById('source').addEventListener('dragstart', evt => {
  console.log('dragstart')
  evt.dataTransfer.setData('text/html', 'Une info à passer')
}, false)

document.getElementById('target').addEventListener('dragover', evt => {
  evt.preventDefault()
  evt.target.style.backgroundColor = '#eee'
}, false)

document.getElementById('target').addEventListener('dragleave', evt => {
  evt.preventDefault()
  evt.target.style.backgroundColor = '#fff'
}, false)

document.getElementById('target').addEventListener('drop', evt => {
  evt.preventDefault()
  console.log('drop', evt.dataTransfer.getData('text/html'))
}, false)





// pizzaList

import Dexie from 'dexie'

var db = new Dexie("friends-database");
            db.version(1).stores({
                friends: 'name,shoeSize',
                // ...add more stores (tables) here...
            });

export class PizzaList {
  constructor () {
    this.db = new Dexie('pizzas')
    this.db.version(1).stores({
      pizzas: '++id, name'
    })
    this.db.open()
  }

  addPizza (pizza) {
    this.db.pizzas.add(pizza)
  }

  getPizzas () {
    return this.db.pizzas.toArray().then(pizzas => {
      console.log('pizzas', pizzas)
      return pizzas
    })
  }

  with (topping) {
    if (!topping) return this.getPizzas()
    return this.getPizzas()
      .then(pizzas => pizzas.filter(pizza => pizza.toppings.indexOf(topping) !== -1))
  }
}


// index.html

    <!--<h2>Pizzas</h2>

    <input type="text" id="query">

    <ul id="pizzas"></ul>-->


    <div id="target" style="margin:50px;border-radius:10px;border:1em solid red;width:300px;height:300px">Drop Zone</div>
    <span id="source" draggable="true" style="background-color:red;font-size:3em">TEST</span>

// pizza

  cook (time = 1000) {
    return new Promise(resolve => {
      setTimeout(resolve, time)
    })
  }
